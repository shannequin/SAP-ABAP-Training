REPORT Z_ABPTRAIN_SML_EXER46.

*Exercise 46 - Local Class
*Use local class instead of function group

*Class to add/subtract 3 numbers
CLASS lcl_add_sub DEFINITION.

  PUBLIC SECTION.

    METHODS: "constructor IMPORTING p_num1 TYPE n
              "                     p_num2 TYPE n
               "                    p_num3 TYPE n,
             set_numbers IMPORTING p_n1 TYPE n
                                   p_n2 TYPE n
                                   p_n3 TYPE n,
             add_numbers,
             sub_numbers,
             get_sum RETURNING VALUE(s_result) TYPE string,
             get_diff RETURNING VALUE(d_result) TYPE string.

  "Variables to hold input
  PRIVATE SECTION.
    DATA: num1(3) TYPE n,
          num2(3) TYPE n,
          num3(3) TYPE n,
    "Strings to hold results
    sum_result TYPE string,
          diff_result TYPE string.

ENDCLASS.

CLASS lcl_add_sub IMPLEMENTATION.

  "Constructor sets private variables from input
*  METHOD constructor.
*    num1 = p_num1.
*    num2 = p_num2.
*    num3 = p_num3.
*  ENDMETHOD.

  "Sets private variables from input
  METHOD set_numbers.
    num1 = p_n1.
    num2 = p_n2.
    num3 = p_n3.
  ENDMETHOD.

  "Adds variables
  METHOD add_numbers.
*    sum_one_two = num1 + num2.
*    sum_two_three = num2 + num3.
*
    sum_result = |{ num1 } + { num2 } = { num1 + num2 } AND { num2 } + { num3 } = { num2 + num3 }|.
  ENDMETHOD.

  "Subtracts variables
  METHOD sub_numbers.
    diff_result = |{ num1 } - { num2 } = { num1 - num2 } AND { num2 } - { num3 } = { num2 - num3 }|.
  ENDMETHOD.

  METHOD get_sum.
    s_result = sum_result.
  ENDMETHOD.

  METHOD get_diff.
    d_result = diff_result.
  ENDMETHOD.

ENDCLASS.

*Main Program

START-OF-SELECTION.

*Maintain Selection Text
*Get 3 numbers
PARAMETERS: p_num1(3) TYPE n,
            p_num2(3) TYPE n,
            p_num3(3) TYPE n.

*Instantiate object
*DATA: lo_add_sub TYPE REF TO lcl_add_sub.
*CREATE OBJECT lo_add_sub.
DATA(lo_add_sub) = NEW lcl_add_sub( ).

*Call method to set object variables
lo_add_sub->set_numbers( p_n1 = p_num1
                         p_n2 = p_num2
                         p_n3 = p_num3 ).

*Call method to add numbers
lo_add_sub->add_numbers( ).
*Call method to subtract numbers
lo_add_sub->sub_numbers( ).

*Display results
WRITE: |{ lo_add_sub->get_sum( ) }|,
      / |{ lo_add_sub->get_diff( ) }|.
